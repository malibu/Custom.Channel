<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Apache.NMS.WCF</name>
    </assembly>
    <members>
        <member name="T:Apache.NMS.WCF.NmsConstants">
            <summary>
            Constants used in the NMS WCF provider.
            </summary>
        </member>
        <member name="F:Apache.NMS.WCF.NmsConstants.TransportScheme">
            <summary>
            The transport scheme to use with NMS.
            </summary>
        </member>
        <member name="F:Apache.NMS.WCF.NmsConstants.NmsBindingSectionName">
            <summary>
            The name of the NMS binding configuration section.
            </summary>
        </member>
        <member name="F:Apache.NMS.WCF.NmsConstants.NmsTransportSectionName">
            <summary>
            The name of the NMS transport configuration section.
            </summary>
        </member>
        <member name="M:Apache.NMS.WCF.NmsConstants.#cctor">
            <summary>
            Initializes the <see cref="T:Apache.NMS.WCF.NmsConstants"/> class.
            </summary>
        </member>
        <member name="P:Apache.NMS.WCF.NmsConstants.DefaultMessageEncoderFactory">
            <summary>
            Gets the default message encoder factory.
            </summary>
            <value>The default message encoder factory.</value>
        </member>
        <member name="T:Apache.NMS.WCF.NmsBinding">
            <summary>
            The standard binding for NMS.
            </summary>
        </member>
        <member name="M:Apache.NMS.WCF.NmsBinding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Apache.NMS.WCF.NmsBinding"/> class.
            </summary>
            <remarks>
            The default transport is set to <see cref="T:Apache.NMS.WCF.NmsTransportBindingElement"/>, while the
            default message encoding is set to <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement"/>.
            </remarks>
        </member>
        <member name="M:Apache.NMS.WCF.NmsBinding.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Apache.NMS.WCF.NmsBinding"/> class.
            </summary>
            <param name="configurationName">Name of the configuration.</param>
            <remarks>
            The default transport is set to <see cref="T:Apache.NMS.WCF.NmsTransportBindingElement"/>, while the
            default message encoding is set to <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement"/>.
            </remarks>
        </member>
        <member name="M:Apache.NMS.WCF.NmsBinding.CreateBindingElements">
            <summary>
            When overridden in a derived class, creates a collection that contains the binding elements that are part of the current binding.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.ICollection`1"></see> object of type <see cref="T:System.ServiceModel.Channels.BindingElement"></see> that contains the binding elements from the current binding object in the correct order.
            </returns>
        </member>
        <member name="M:Apache.NMS.WCF.NmsBinding.ApplyConfiguration(System.String)">
            <summary>
            Applies the configuration.
            </summary>
            <param name="configurationName">Name of the configuration.</param>
        </member>
        <member name="P:Apache.NMS.WCF.NmsBinding.MessageElement">
            <summary>
            This property encapsulates the message encoding used for this custom
            channel implementation.
            </summary>
            <value>The message element.</value>
        </member>
        <member name="P:Apache.NMS.WCF.NmsBinding.TransportElement">
            <summary>
            Gets or sets the transport element.
            </summary>
            <value>The transport element.</value>
        </member>
        <member name="P:Apache.NMS.WCF.NmsBinding.Destination">
            <summary>
            Gets or sets the name of the destination.
            </summary>
            <value>The name of the destination.</value>
        </member>
        <member name="P:Apache.NMS.WCF.NmsBinding.DestinationType">
            <summary>
            Gets or sets the name of the message topic (used for publish-subscribe operations).
            </summary>
            <value>The name of the topic.</value>
        </member>
        <member name="P:Apache.NMS.WCF.NmsBinding.Scheme">
            <summary>
            When implemented in a derived class, sets the URI scheme that specifies the transport used by the channel and listener factories that are built by the bindings.
            </summary>
            <value></value>
            <returns>The URI scheme that is used by the channels or listeners that are created by the factories built by the current binding.</returns>
        </member>
        <member name="T:Apache.NMS.WCF.NmsChannelHelper">
            <summary>
            A helper class for the NMS transport.
            </summary>
        </member>
        <member name="M:Apache.NMS.WCF.NmsChannelHelper.ValidateTimeout(System.TimeSpan)">
            <summary>
            Ensures that the specified timeout value is not negative.
            </summary>
            <param name="timeout">The timeout that needs to be validated.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">the timeout value was negative.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsChannelHelper.CreateUniqueSessionId">
            <summary>
            Creates a unique session identifier.
            </summary>
        </member>
        <member name="T:Apache.NMS.WCF.NmsInputQueueChannelBase`1">
            <summary>
            Base class for NMS input channels.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputQueueChannelBase`1.#ctor(System.ServiceModel.Channels.ChannelListenerBase,System.ServiceModel.EndpointAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:Apache.NMS.WCF.NmsInputQueueChannelBase`1"/> class.
            </summary>
            <param name="factory">The factory that was used to create the channel.</param>
            <param name="localAddress">The local address of the channel.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputQueueChannelBase`1.Dispatch(`0)">
            <summary>
            Dispatches the specified request.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputQueueChannelBase`1.BeginDequeue(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Begins the dequeue operation.
            </summary>
            <param name="timeout">The timeout.</param>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputQueueChannelBase`1.EndDequeue(System.IAsyncResult)">
            <summary>
            Ends the dequeue operation.
            </summary>
            <param name="result">The result.</param>
            <returns></returns>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputQueueChannelBase`1.Dequeue(System.TimeSpan)">
            <summary>
            Dequeues the next message.
            </summary>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputQueueChannelBase`1.TryDequeue(System.IAsyncResult,`0@)">
            <summary>
            Tries to dequeue the next message.
            </summary>
            <param name="result">The result.</param>
            <param name="message">The message.</param>
            <returns></returns>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputQueueChannelBase`1.OnAbort">
            <summary>
            Inserts processing on a communication object after it transitions to the closing state due to the invocation of a synchronous abort operation.
            </summary>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputQueueChannelBase`1.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Inserts processing on a communication object after it transitions to the opening state due to the invocation of an asynchronous open operation.
            </summary>
            <param name="timeout">The <see cref="T:System.Timespan"/> that specifies how long the on open operation has to complete before timing out.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives notification of the completion of the asynchronous on open operation.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on open operation.</param>
            <returns>
            The <see cref="T:System.IAsyncResult"/> that references the asynchronous on open operation.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="timeout"/> is less than zero.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputQueueChannelBase`1.OnOpen(System.TimeSpan)">
            <summary>
            Inserts processing on a communication object after it transitions into the opening state which must complete within a specified interval of time.
            </summary>
            <param name="timeout">The <see cref="T:System.Timespan"/> that specifies how long the on open operation has to complete before timing out.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="timeout"/> is less than zero.</exception>
            <exception cref="T:System.TimeoutException">The interval of time specified by <paramref name="timeout"/> that was allotted for the operation was exceeded before the operation was completed.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputQueueChannelBase`1.OnEndOpen(System.IAsyncResult)">
            <summary>
            Completes an asynchronous operation on the open of a communication object.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> that is returned by a call to the <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)"/> method.</param>
            <exception cref="T:System.TimeoutException">The interval of time specified by <paramref name="timeout"/> that was allotted for the operation was exceeded before the operation was completed.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputQueueChannelBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Inserts processing after a communication object transitions to the closing state due to the invocation of an asynchronous close operation.
            </summary>
            <param name="timeout">The <see cref="T:System.Timespan"/> that specifies how long the on close operation has to complete before timing out.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives notification of the completion of the asynchronous on close operation.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on close operation.</param>
            <returns>
            The <see cref="T:System.IAsyncResult"/> that references the asynchronous on close operation.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="timeout"/> is less than zero.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputQueueChannelBase`1.OnClose(System.TimeSpan)">
            <summary>
            Inserts processing on a communication object after it transitions to the closing state due to the invocation of a synchronous close operation.
            </summary>
            <param name="timeout">The <see cref="T:System.Timespan"/> that specifies how long the on close operation has to complete before timing out.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="timeout"/> is less than zero.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputQueueChannelBase`1.OnEndClose(System.IAsyncResult)">
            <summary>
            Completes an asynchronous operation on the close of a communication object.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> that is returned by a call to the <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)"/> method.</param>
            <exception cref="T:System.TimeoutException">The interval of time specified by <paramref name="timeout"/> that was allotted for the operation was exceeded before the operation was completed.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputQueueChannelBase`1.GetProperty``1">
            <summary>
            Gets the property.
            </summary>
            <typeparam name="P"></typeparam>
        </member>
        <member name="P:Apache.NMS.WCF.NmsInputQueueChannelBase`1.LocalAddress">
            <summary>
            Gets the local address.
            </summary>
            <value>The local address.</value>
        </member>
        <member name="P:Apache.NMS.WCF.NmsInputQueueChannelBase`1.PendingMessageCount">
            <summary>
            Gets the pending message count.
            </summary>
            <value>The pending message count.</value>
        </member>
        <member name="T:Apache.NMS.WCF.NmsTransportElement">
            <summary>
            Configuration section for NMS.
            </summary>
        </member>
        <member name="M:Apache.NMS.WCF.NmsTransportElement.CreateBindingElement">
            <summary>
            When overridden in a derived class, returns a custom binding element object. 
            </summary>
            <returns>
            A custom <see cref="T:System.ServiceModel.Channels.BindingElement" /> object.
            </returns>
        </member>
        <member name="M:Apache.NMS.WCF.NmsTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
            <summary>
            Applies the content of a specified binding element to this binding configuration element.
            </summary>
            <param name="bindingElement">A binding element.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="transportElement"/> is null.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
            <summary>
            Copies the content of the specified configuration element to this configuration element.
            </summary>
            <param name="from">The configuration element to be copied.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="from"/> is null.</exception>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file is read-only.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsTransportElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)">
            <summary>
            Initializes this binding configuration section with the content of the specified binding element.
            </summary>
            <param name="bindingElement">A binding element.</param>
        </member>
        <member name="P:Apache.NMS.WCF.NmsTransportElement.Destination">
            <summary>
            Gets or sets the name of the message destination.
            </summary>
            <value>The name of the message destination.</value>
        </member>
        <member name="P:Apache.NMS.WCF.NmsTransportElement.DestinationType">
            <summary>
            Gets or sets the type of the message destination.
            </summary>
            <value>The type of the message destination (may be either <c>queue</c> or <c>topic</c>, and temporary 
            or permanent versions of either).</value>
        </member>
        <member name="P:Apache.NMS.WCF.NmsTransportElement.BindingElementType">
            <summary>
            When overridden in a derived class, gets the <see cref="T:System.Type" /> object that represents the custom binding element. 
            </summary>
            <returns>
            A <see cref="T:System.Type" /> object that represents the custom binding type.
            </returns>
        </member>
        <member name="P:Apache.NMS.WCF.NmsTransportElement.Properties">
            <summary>
            Gets the collection of properties.
            </summary>
            <value></value>
            <returns>
            The <see cref="T:System.Configuration.ConfigurationPropertyCollection"/> of properties for the element.
            </returns>
        </member>
        <member name="T:Apache.NMS.WCF.NmsOutputSessionChannel">
            <summary>
            Client-side implementation of the sessioned one-way channel.
            </summary>
        </member>
        <member name="T:Apache.NMS.WCF.NmsOutputChannel">
            <summary>
            Client-side implementation of the sessionless one-way channel.
            </summary>
        </member>
        <member name="T:Apache.NMS.WCF.NmsOutputChannelBase">
            <summary>
            Base class for NMS output channels.
            </summary>
        </member>
        <member name="M:Apache.NMS.WCF.NmsOutputChannelBase.#ctor(System.ServiceModel.Channels.ChannelManagerBase,System.ServiceModel.EndpointAddress,System.Uri,System.ServiceModel.Channels.BufferManager,System.ServiceModel.Channels.MessageEncoderFactory,System.String,Apache.NMS.DestinationType)">
            <summary>
            Initializes a new instance of the <see cref="T:Apache.NMS.WCF.NmsOutputChannelBase"/> class.
            </summary>
            <param name="factory">The factory that created the channel.</param>
            <param name="remoteAddress">The remote address for the channel.</param>
            <param name="via">The URI that contains the transport address to which messages are sent on the output channel.</param>
            <param name="bufferManager">The buffer manager.</param>
            <param name="encoderFactory">The encoder factory.</param>
            <param name="destination">The name of the ActiveMQ destination.</param>
            <param name="destinationType">The type of the ActiveMQ destination (either a queue or a topic, permanent or temporary).</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsOutputChannelBase.OnAbort">
            <summary>
            Inserts processing on a communication object after it transitions to the closing state due to the invocation of a synchronous abort operation.
            </summary>
        </member>
        <member name="M:Apache.NMS.WCF.NmsOutputChannelBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Inserts processing after a communication object transitions to the closing state due to the invocation of an asynchronous close operation.
            </summary>
            <param name="timeout">The <see cref="T:System.Timespan"/> that specifies how long the on close operation has to complete before timing out.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives notification of the completion of the asynchronous on close operation.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on close operation.</param>
            <returns>
            The <see cref="T:System.IAsyncResult"/> that references the asynchronous on close operation.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="timeout"/> is less than zero.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsOutputChannelBase.OnClose(System.TimeSpan)">
            <summary>
            Inserts processing on a communication object after it transitions to the closing state due to the invocation of a synchronous close operation.
            </summary>
            <param name="timeout">The <see cref="T:System.Timespan"/> that specifies how long the on close operation has to complete before timing out.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="timeout"/> is less than zero.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsOutputChannelBase.OnEndClose(System.IAsyncResult)">
            <summary>
            Completes an asynchronous operation on the close of a communication object.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> that is returned by a call to the <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)"/> method.</param>
            <exception cref="T:System.TimeoutException">The interval of time specified by <paramref name="timeout"/> that was allotted for the operation was exceeded before the operation was completed.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsOutputChannelBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Inserts processing on a communication object after it transitions to the opening state due to the invocation of an asynchronous open operation.
            </summary>
            <param name="timeout">The <see cref="T:System.Timespan"/> that specifies how long the on open operation has to complete before timing out.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives notification of the completion of the asynchronous on open operation.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on open operation.</param>
            <returns>
            The <see cref="T:System.IAsyncResult"/> that references the asynchronous on open operation.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="timeout"/> is less than zero.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsOutputChannelBase.OnOpen(System.TimeSpan)">
            <summary>
            Inserts processing on a communication object after it transitions into the opening state which must complete within a specified interval of time.
            </summary>
            <param name="timeout">The <see cref="T:System.Timespan"/> that specifies how long the on open operation has to complete before timing out.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="timeout"/> is less than zero.</exception>
            <exception cref="T:System.TimeoutException">The interval of time specified by <paramref name="timeout"/> that was allotted for the operation was exceeded before the operation was completed.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsOutputChannelBase.OnEndOpen(System.IAsyncResult)">
            <summary>
            Completes an asynchronous operation on the open of a communication object.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> that is returned by a call to the <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)"/> method.</param>
            <exception cref="T:System.TimeoutException">The interval of time specified by <paramref name="timeout"/> that was allotted for the operation was exceeded before the operation was completed.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsOutputChannelBase.GetProperty``1">
            <summary>
            Gets the property.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="P:Apache.NMS.WCF.NmsOutputChannelBase.RemoteAddress">
            <summary>
            Gets the remote address.
            </summary>
            <value>The remote address.</value>
        </member>
        <member name="P:Apache.NMS.WCF.NmsOutputChannelBase.Via">
            <summary>
            Gets the routing address.
            </summary>
            <value>The routing address.</value>
        </member>
        <member name="P:Apache.NMS.WCF.NmsOutputChannelBase.BufferManager">
            <summary>
            Gets the buffer manager.
            </summary>
            <value>The buffer manager.</value>
        </member>
        <member name="P:Apache.NMS.WCF.NmsOutputChannelBase.Encoder">
            <summary>
            Gets the encoder.
            </summary>
            <value>The encoder.</value>
        </member>
        <member name="P:Apache.NMS.WCF.NmsOutputChannelBase.Destination">
            <summary>
            Gets the name of the destination (either a queue or a topic).
            </summary>
            <value>The name of the destination.</value>
        </member>
        <member name="P:Apache.NMS.WCF.NmsOutputChannelBase.DestinationType">
            <summary>
            Gets the type of the destination.
            </summary>
            <value>The type of the destination.</value>
        </member>
        <member name="M:Apache.NMS.WCF.NmsOutputChannel.#ctor(System.ServiceModel.Channels.ChannelManagerBase,System.ServiceModel.EndpointAddress,System.Uri,System.ServiceModel.Channels.BufferManager,System.ServiceModel.Channels.MessageEncoderFactory,System.String,Apache.NMS.DestinationType)">
            <summary>
            Initializes a new instance of the <see cref="T:Apache.NMS.WCF.NmsOutputChannel"/> class.
            </summary>
            <param name="factory">The factory that created the channel.</param>
            <param name="remoteAddress">The remote address of the channel.</param>
            <param name="via">The URI that contains the transport address to which messages are sent on the output channel.</param>
            <param name="bufferManager">The buffer manager.</param>
            <param name="encoderFactory">The encoder factory.</param>
            <param name="destination">The name of the ActiveMQ destination.</param>
            <param name="destinationType">The type of the ActiveMQ destination (either a queue or a topic, permanent or temporary).</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsOutputChannel.Send(System.ServiceModel.Channels.Message)">
            <summary>
            Transmits a message to the destination of the output channel. 
            </summary>
            <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> being sent on the output channel.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
            <summary>
            Sends a message on the current output channel within a specified interval of time.
            </summary>
            <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> being sent on the output channel.</param>
            <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsOutputChannel.TranslateMessage(System.ServiceModel.Channels.Message)">
            <summary>
            Translates the message using the appropriate SOAP versioning scheme.
            </summary>
            <param name="message">The message to be translated.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsOutputChannel.TranslateMessageAsSoap11(System.ServiceModel.Channels.Message)">
            <summary>
            Translates the message using the SOAP 1.1 schema.
            </summary>
            <param name="message">The message to be translated.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsOutputChannel.TranslateMessageAsSoap12(System.ServiceModel.Channels.Message)">
            <summary>
            Translates the message using the SOAP 1.2 schema.
            </summary>
            <param name="message">The message to be translated.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to transmit a message to the destination of the output channel. 
            </summary>
            <returns>
            The <see cref="T:System.IAsyncResult" /> that references the asynchronous message transmission. 
            </returns>
            <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> being sent on the output channel. </param>
            <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate. </param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous send operation.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to transmit a message to the destination of the output channel within a specified interval of time.
            </summary>
            <returns>
            The <see cref="T:System.IAsyncResult" /> that references the asynchronous send operation.
            </returns>
            <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> being sent on the output channel.</param>
            <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation send completion.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous send operation.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsOutputChannel.EndSend(System.IAsyncResult)">
            <summary>
            Completes an asynchronous operation to transmit a message to the destination of the output channel.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> returned by a call to the <see cref="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)"/>  method.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsOutputChannel.GetProperty``1">
            <summary>
            Gets the property.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Apache.NMS.WCF.NmsOutputChannel.OnAbort">
            <summary>
            Inserts processing on a communication object after it transitions to the closing state due to the invocation of a synchronous abort operation.
            </summary>
        </member>
        <member name="M:Apache.NMS.WCF.NmsOutputChannel.OnClose(System.TimeSpan)">
            <summary>
            Inserts processing on a communication object after it transitions to the closing state due to the invocation of a synchronous close operation.
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the on close operation has to complete before timing out.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="timeout" /> is less than zero.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsOutputChannel.OnEndClose(System.IAsyncResult)">
            <summary>
            Completes an asynchronous operation on the close of a communication object.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" /> method.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsOutputChannel.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Inserts processing after a communication object transitions to the closing state due to the invocation of an asynchronous close operation.
            </summary>
            <returns>
            The <see cref="T:System.IAsyncResult" /> that references the asynchronous on close operation. 
            </returns>
            <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the on close operation has to complete before timing out.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous on close operation.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on close operation.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="timeout" /> is less than zero.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsOutputChannel.OnOpen(System.TimeSpan)">
            <summary>
            Inserts processing on a communication object after it transitions into the opening state which must complete within a specified interval of time.
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the on open operation has to complete before timing out.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="timeout" /> is less than zero.</exception>
            <exception cref="T:System.TimeoutException">The interval of time specified by <paramref name="timeout" /> that was allotted for the operation was exceeded before the operation was completed.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsOutputChannel.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Inserts processing on a communication object after it transitions to the opening state due to the invocation of an asynchronous open operation.
            </summary>
            <returns>
            The <see cref="T:System.IAsyncResult" /> that references the asynchronous on open operation. 
            </returns>
            <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the on open operation has to complete before timing out.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous on open operation.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on open operation.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="timeout" /> is less than zero.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsOutputChannel.OnEndOpen(System.IAsyncResult)">
            <summary>
            Completes an asynchronous operation on the open of a communication object.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" /> method.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsOutputChannel.EncodeMessage(System.ServiceModel.Channels.Message)">
            <summary>
            Encodes the message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsOutputSessionChannel.#ctor(System.ServiceModel.Channels.ChannelManagerBase,System.Uri,System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.BufferManager,System.ServiceModel.Channels.MessageEncoderFactory,System.String,Apache.NMS.DestinationType)">
            <summary>
            Initializes a new instance of the <see cref="T:Apache.NMS.WCF.NmsOutputSessionChannel"/> class.
            </summary>
            <param name="factory">The factory that created this channel.</param>
            <param name="address">The address of this channel.</param>
            <param name="via">The URI that contains the transport address to which messages are sent on the output channel.</param>
            <param name="bufferManager">The buffer manager.</param>
            <param name="encoderFactory">The encoder factory.</param>
            <param name="destination">The name of the ActiveMQ destination.</param>
            <param name="destinationType">The type of the ActiveMQ destination (either a queue or a topic, permanent or temporary).</param>
        </member>
        <member name="P:Apache.NMS.WCF.NmsOutputSessionChannel.Session">
            <summary>
            Gets the type of session associated with this channel.
            </summary>
            <value></value>
            <returns>The type of <see cref="T:System.ServiceModel.Channels.ISession"/> associated with this channel. </returns>
        </member>
        <member name="T:Apache.NMS.WCF.NmsOutputSessionChannel.OutputSession">
            <summary>
            Internal implementation of a session, with tracking ID.
            </summary>
        </member>
        <member name="P:Apache.NMS.WCF.NmsOutputSessionChannel.OutputSession.Id">
            <summary>
            Gets the ID that uniquely identifies the session.
            </summary>
            <value></value>
            <returns>The ID that uniquely identifies the session. </returns>
        </member>
        <member name="T:Apache.NMS.WCF.NmsInputSessionChannel">
            <summary>
            Server-side implementation of the sessioned one-way channel.
            </summary>
        </member>
        <member name="T:Apache.NMS.WCF.NmsInputChannel">
            <summary>
            Server-side implementation of the sessionless one-way channel.
            </summary>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannel.#ctor(System.ServiceModel.Channels.ChannelListenerBase,System.ServiceModel.EndpointAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:Apache.NMS.WCF.NmsInputChannel"/> class.
            </summary>
            <param name="factory">The factory that was used to create the channel.</param>
            <param name="localAddress">The local address of the channel.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannel.BeginReceive(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to receive a message that has a state object associated with it.
            </summary>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives the notification of the asynchronous operation completion.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous operation.</param>
            <returns>
            The <see cref="T:System.IAsyncResult"/> that references the asynchronous message reception.
            </returns>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to receive a message that has a specified time out and state object associated with it.
            </summary>
            <param name="timeout">The <see cref="T:System.Timespan"/> that specifies the interval of time to wait for a message to become available.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives the notification of the asynchronous operation completion.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous operation.</param>
            <returns>
            The <see cref="T:System.IAsyncResult"/> that references the asynchronous receive operation.
            </returns>
            <exception cref="T:System.TimeoutException">The specified <paramref name="timeout"/> is exceeded before the operation is completed.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The timeout specified is less than zero.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannel.EndReceive(System.IAsyncResult)">
            <summary>
            Completes an asynchronous operation to receive a message.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> returned by a call to one of the <c>System.ServiceModel.Channels.IInputChannel.BeginReceive</c> methods.</param>
            <returns>
            The <see cref="T:System.ServiceModel.Channels.Message"/> received.
            </returns>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannel.Receive">
            <summary>
            Returns the message received, if one is available. If a message is not available, blocks for a default interval of time.
            </summary>
            <returns>
            The <see cref="T:System.ServiceModel.Channels.Message"/> received.
            </returns>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannel.Receive(System.TimeSpan)">
            <summary>
            Returns the message received, if one is available. If a message is not available, blocks for a specified interval of time.
            </summary>
            <param name="timeout">The <see cref="T:System.Timespan"/> that specifies how long the receive operation has to complete before timing out and throwing a <see cref="T:System.TimeoutException"/>.</param>
            <returns>
            The <see cref="T:System.ServiceModel.Channels.Message"/> received.
            </returns>
            <exception cref="T:System.TimeoutException">The specified <paramref name="timeout"/> is exceeded before the operation is completed.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The timeout specified is less than zero.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to receive a message that has a specified time out and state object associated with it.
            </summary>
            <param name="timeout">The <see cref="T:System.Timespan"/> that specifies the interval of time to wait for a message to become available.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives the notification of the asynchronous operation completion.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous operation.</param>
            <returns>
            The <see cref="T:System.IAsyncResult"/> that references the asynchronous receive operation.
            </returns>
            <exception cref="T:System.TimeoutException">The specified <paramref name="timeout"/> is exceeded before the operation is completed.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The timeout specified is less than zero.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)">
            <summary>
            Completes the specified asynchronous operation to receive a message.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> returned by a call to the <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)"/> method.</param>
            <param name="message">The <see cref="T:System.ServiceModel.Channels.Message"/> received.</param>
            <returns>
            true if a message is received before the specified interval of time elapses; otherwise false.
            </returns>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)">
            <summary>
            Tries to receive a message within a specified interval of time.
            </summary>
            <param name="timeout">The <see cref="T:System.IAsyncResult"/> returned by a call to one of the <c>System.ServiceModel.Channels.IInputChannel.BeginReceive</c> methods.</param>
            <param name="message">The <see cref="T:System.ServiceModel.Channels.Message"/> received.</param>
            <returns>
            true if a message is received before the <paramref name="timeout"/> has been exceeded; otherwise false.
            </returns>
            <exception cref="T:System.TimeoutException">The specified <paramref name="timeout"/> is exceeded before the operation is completed.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The timeout specified is less than zero.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous wait-for-a-message-to-arrive operation that has a specified time out and state object associated with it.
            </summary>
            <param name="timeout">The <see cref="T:System.Timespan"/> that specifies the interval of time to wait for a message to become available.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives the notification of the asynchronous operation completion.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous operation.</param>
            <returns>
            The <see cref="T:System.IAsyncResult"/> that references the asynchronous operation to wait for a message to arrive.
            </returns>
            <exception cref="T:System.TimeoutException">The specified <paramref name="timeout"/> is exceeded before the operation is completed.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The timeout specified is less than zero.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannel.EndWaitForMessage(System.IAsyncResult)">
            <summary>
            Completes the specified asynchronous wait-for-a-message operation.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> that identifies the <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)"/> operation to finish, and from which to retrieve an end result.</param>
            <returns>
            true if a message has arrived before the <paramref name="timeout"/> has been exceeded; otherwise false.
            </returns>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannel.WaitForMessage(System.TimeSpan)">
            <summary>
            Returns a value that indicates whether a message has arrived within a specified interval of time.
            </summary>
            <param name="timeout">The <see cref="T:System.Timespan"/> specifies the maximum interval of time to wait for a message to arrive before timing out.</param>
            <returns>
            true if a message has arrived before the <paramref name="timeout"/> has been exceeded; otherwise false.
            </returns>
            <exception cref="T:System.TimeoutException">The specified <paramref name="timeout"/> is exceeded before the operation is completed.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The timeout specified is less than zero.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputSessionChannel.#ctor(System.ServiceModel.Channels.ChannelListenerBase,System.ServiceModel.EndpointAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:Apache.NMS.WCF.NmsInputSessionChannel"/> class.
            </summary>
            <param name="factory">The factory that was used to create the channel.</param>
            <param name="localAddress">The local address of the channel.</param>
        </member>
        <member name="P:Apache.NMS.WCF.NmsInputSessionChannel.Session">
            <summary>
            Gets the type of session associated with this channel.
            </summary>
            <value></value>
            <returns>The type of <see cref="T:System.ServiceModel.Channels.ISession"/> associated with this channel. </returns>
        </member>
        <member name="T:Apache.NMS.WCF.NmsInputSessionChannel.InputSession">
            <summary>
            Internal implementation of a session, with tracking ID.
            </summary>
        </member>
        <member name="P:Apache.NMS.WCF.NmsInputSessionChannel.InputSession.Id">
            <summary>
            Gets the ID that uniquely identifies the session.
            </summary>
            <value></value>
            <returns>The ID that uniquely identifies the session. </returns>
        </member>
        <member name="T:Apache.NMS.WCF.NmsInputChannelListener">
            <summary>
            Server-side listener for sessionless input channels.
            </summary>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannelListener.#ctor(Apache.NMS.WCF.NmsTransportBindingElement,System.ServiceModel.Channels.BindingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Apache.NMS.WCF.NmsInputChannelListener"/> class.
            </summary>
            <param name="transportElement">The binding element.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannelListener.OnAbort">
            <summary>
            Inserts processing on a communication object after it transitions to the closing state 
            due to the invocation of a synchronous abort operation.
            </summary>
            <remarks>
            Abort can be called at any time, so we can't assume that we've been Opened successfully 
            (and thus may not have any listen sockets).
            </remarks>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannelListener.OnClose(System.TimeSpan)">
            <summary>
            Inserts processing on a communication object after it transitions to the closing state due to the invocation of a synchronous close operation.
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the on close operation has to complete before timing out.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="timeout" /> is less than zero.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannelListener.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Inserts processing after a communication object transitions to the closing state due to the invocation of an asynchronous close operation.
            </summary>
            <returns>
            The <see cref="T:System.IAsyncResult" /> that references the asynchronous on close operation. 
            </returns>
            <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the on close operation has to complete before timing out.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous on close operation.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on close operation.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="timeout" /> is less than zero.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannelListener.OnEndClose(System.IAsyncResult)">
            <summary>
            Completes an asynchronous operation on the close of a communication object.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" /> method.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannelListener.OnOpen(System.TimeSpan)">
            <summary>
            Inserts processing on a communication object after it transitions into the opening state which must complete within a specified interval of time.
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the on open operation has to complete before timing out.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="timeout" /> is less than zero.</exception>
            <exception cref="T:System.TimeoutException">The interval of time specified by <paramref name="timeout" /> that was allotted for the operation was exceeded before the operation was completed.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannelListener.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Inserts processing on a communication object after it transitions to the opening state due to the invocation of an asynchronous open operation.
            </summary>
            <returns>
            The <see cref="T:System.IAsyncResult" /> that references the asynchronous on open operation. 
            </returns>
            <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the on open operation has to complete before timing out.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous on open operation.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on open operation.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="timeout" /> is less than zero.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannelListener.OnEndOpen(System.IAsyncResult)">
            <summary>
            Completes an asynchronous operation on the open of a communication object.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" /> method.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannelListener.OnWaitForChannel(System.TimeSpan)">
            <summary>
            When overridden in a derived class, provides a point of extensibility when waiting for a channel to arrive.
            </summary>
            <returns>
            true if the method completed before the interval of time specified by the <paramref name="timeout" /> expired; otherwise false.
            </returns>
            <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the on wait for a channel operation has to complete before timing out.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannelListener.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            When implemented in a derived class, provides a point of extensibility when starting to wait for a channel to arrive.
            </summary>
            <returns>
            The <see cref="T:System.IAsyncResult" /> that references the asynchronous on begin wait operation. 
            </returns>
            <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the on begin wait operation has to complete before timing out.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation on begin wait completion.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on begin wait operation.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannelListener.OnEndWaitForChannel(System.IAsyncResult)">
            <summary>
            When implemented in a derived class, provides a point of extensibility when ending the waiting for a channel to arrive.
            </summary>
            <returns>
            true if the method completed before the timeout expired; otherwise false.
            </returns>
            <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannelListener.OnAcceptChannel(System.TimeSpan)">
            <summary>
            When implemented in a derived class, provides an extensibility point when accepting a channel.
            </summary>
            <returns>
            The <see cref="T:System.ServiceModel.Channels.IChannel" /> accepted.
            </returns>
            <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the accept channel operation has to complete before timing out.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannelListener.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            When implemented in a derived class, provides an asynchronous extensibility point when beginning to accept a channel.
            </summary>
            <returns>
            The <see cref="T:System.IAsyncResult" /> that references the asynchronous accept channel operation. 
            </returns>
            <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the accept channel operation has to complete before timing out.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the accept channel operation.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous accept channel operation.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannelListener.OnEndAcceptChannel(System.IAsyncResult)">
            <summary>
            When implemented in a derived class, provides an asynchronous extensibility point when completing the acceptance a channel.
            </summary>
            <returns>
            The <see cref="T:System.ServiceModel.Channels.IChannel" /> accepted by the listener.
            </returns>
            <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.ChannelListenerBase`1.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannelListener.DispatchCallback(System.Object)">
            <summary>
            Dispatches the callback.
            </summary>
            <param name="state">The state.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannelListener.Dispatch(System.ServiceModel.Channels.Message)">
            <summary>
            Matches an incoming message to its waiting listener,
            using the FilterTable to dispatch the message to the correct
            listener. If no listener is waiting for the message, it is silently
            discarded.
            </summary>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannelListener.CreateOrRetrieveChannel(Apache.NMS.WCF.NmsInputChannel@)">
            <summary>
            Creates or retrieves the channel.
            </summary>
            <param name="newChannel">The channel.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannelListener.OnChannelClosed(System.Object,System.EventArgs)">
            <summary>
            Called when the channel is closed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannelListener.CreateNmsChannel(System.Uri)">
            <summary>
            Creates the <see cref="T:Apache.NMS.WCF.NmsInputChannel"/> that will wait for inbound messages.
            </summary>
            <param name="uri">The URI for the message queue.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannelListener.OpenConnection(System.Uri)">
            <summary>
            Opens the connection to the message broker.
            </summary>
            <param name="uri">The URI.</param>
            <returns>An active connection to the ActiveMQ message broker specified by the URI;
            exceptions will be caught by the attached ExceptionListener.</returns>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannelListener.OpenSession(Apache.NMS.IConnection)">
            <summary>
            Opens a session to communicate with a message queue.
            </summary>
            <param name="connection">The connection to the ActiveMQ message broker.</param>
            <returns>A session.</returns>
            <exception cref="T:System.InvalidOperationException">the <paramref name="connection"/> has not yet
            been started.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannelListener.CreateConsumer(Apache.NMS.ISession,Apache.NMS.IDestination)">
            <summary>
            Creates the consumer of messages received on the <paramref name="session"/>.
            </summary>
            <param name="session">The session.</param>
            <param name="destination">The destination.</param>
            <returns>A consumer for any messages received during the session;
            messages will be consumed by the attached Listener.</returns>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannelListener.OnReceiveMessage(Apache.NMS.IMessage)">
            <summary>
            Event handler that processes a received message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannelListener.OnExceptionThrown(System.Exception)">
            <summary>
            Called when an exception is thrown by the ActiveMQ listener.
            </summary>
            <remarks>
            <see cref="T:Apache.NMS.NMSException"/>s will be caught and logged; all other exceptions will
            be thrown back up to the WCF service.
            </remarks>
            <param name="exception">The exception that was thrown.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputChannelListener.EnsureChannelAvailable">
            <summary>
            Guarantees that a channel is attached to this listener.
            </summary>
        </member>
        <member name="P:Apache.NMS.WCF.NmsInputChannelListener.MessageEncoderFactory">
            <summary>
            Gets the message encoder factory.
            </summary>
            <value>The message encoder factory.</value>
        </member>
        <member name="P:Apache.NMS.WCF.NmsInputChannelListener.Destination">
            <summary>
            Gets or sets the destination.
            </summary>
            <value>The destination.</value>
        </member>
        <member name="P:Apache.NMS.WCF.NmsInputChannelListener.DestinationType">
            <summary>
            Gets or sets the type of the destination.
            </summary>
            <value>The type of the destination.</value>
        </member>
        <member name="P:Apache.NMS.WCF.NmsInputChannelListener.Uri">
            <summary>
            When implemented in derived class, gets the URI on which the channel listener listens for an incoming channel.
            </summary>
            <returns>
            The <see cref="T:System.Uri" /> on which the channel listener listens for incoming channels.
            </returns>
        </member>
        <member name="T:Apache.NMS.WCF.NmsTransportBindingElement">
            <summary>
            Key class to specify the custom transport class and its schema.
            </summary>
            <remarks>
            <para>
            Its key role in the WCF is to be the 'factory of factories'.  It determines what shape
            the channel will be. In this case by returning channel factory (for the client) that returns an
            <see cref="T:System.ServiceModel.Channels.IOutputChannel"/> or <see cref="T:System.ServiceModel.Channels.IOutputSessionChannel"/>, and a channel listener 
            (for the server) that returns an <see cref="T:System.ServiceModel.Channels.IInputChannel"/> or <see cref="T:System.ServiceModel.Channels.IInputSessionChannel"/>,
            this class determines that this implementation is a datagram 'shape'.
            </para>
            <para>
            The request/reply channel shape is not supported by WCF.
            </para>
            </remarks>
        </member>
        <member name="M:Apache.NMS.WCF.NmsTransportBindingElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Apache.NMS.WCF.NmsTransportBindingElement"/> class.
            </summary>
        </member>
        <member name="M:Apache.NMS.WCF.NmsTransportBindingElement.#ctor(Apache.NMS.WCF.NmsTransportBindingElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Apache.NMS.WCF.NmsTransportBindingElement"/> class.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Determines whether this instance can build a channel factory in the specified context.
            Only implementations of <see cref="T:System.ServiceModel.Channels.IOutputChannel"/> and <see cref="T:System.ServiceModel.Channels.IOutputSessionChannel"/> are supported.
            </summary>
            <typeparam name="TChannel">The type of the channel.</typeparam>
            <param name="context">The context.</param>
            <returns>
            	<c>true</c> if the requested channel factory can be built; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Apache.NMS.WCF.NmsTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Determines whether this instance can build a channel listener in the specified context.
            Only implementations of <see cref="T:System.ServiceModel.Channels.IInputChannel"/> and <see cref="T:System.ServiceModel.Channels.IInputSessionChannel"/> are supported.
            </summary>
            <typeparam name="TChannel">The type of the channel.</typeparam>
            <param name="context">The context.</param>
            <returns>
            	<c>true</c> if the requested channel listener can be built; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentException">the requested channel does not implement <see cref="T:System.ServiceModel.Channels.IReplyChannel"/>.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Builds the channel factory.
            </summary>
            <typeparam name="TChannel">The type of the channel.</typeparam>
            <param name="context">The context.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">the requested channel does not implement <see cref="T:System.ServiceModel.Channels.IReplyChannel"/>.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Builds the channel listener.
            </summary>
            <typeparam name="TChannel">The type of the channel.</typeparam>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Apache.NMS.WCF.NmsTransportBindingElement.Clone">
            <summary>
            When overridden in a derived class, returns a copy of the binding element object.
            </summary>
            <returns>
            A <see cref="T:System.ServiceModel.Channels.BindingElement"></see> object that is a deep clone of the original.
            </returns>
        </member>
        <member name="M:Apache.NMS.WCF.NmsTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Gets the property.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Apache.NMS.WCF.NmsTransportBindingElement.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
            <summary>
            Writes custom Web Services Description Language (WSDL) elements into the generated WSDL for a contract.
            </summary>
            <param name="exporter">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the contract information.</param>
            <param name="context">Provides mappings from exported WSDL elements to the contract description.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsTransportBindingElement.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
            <summary>
            Writes custom Web Services Description Language (WSDL) elements into the generated WSDL for an endpoint.
            </summary>
            <param name="exporter">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the endpoint information.</param>
            <param name="context">Provides mappings from exported WSDL elements to the endpoint description.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsTransportBindingElement.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
            <summary>
            Implement to include for exporting a custom policy assertion about bindings.
            </summary>
            <param name="exporter">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> that you can use to modify the exporting process.</param>
            <param name="context">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that you can use to insert your custom policy assertion.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsTransportBindingElement.AddAddressToWsdlPort(System.Web.Services.Description.Port,System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.AddressingVersion)">
            <summary>
            Adds the address to WSDL port.
            </summary>
            <param name="wsdlPort">The WSDL port.</param>
            <param name="endpointAddress">The endpoint address.</param>
            <param name="addressing">The addressing.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsTransportBindingElement.AddWSAddressingAssertion(System.ServiceModel.Description.PolicyConversionContext,System.ServiceModel.Channels.AddressingVersion)">
            <summary>
            Adds the WS addressing assertion.
            </summary>
            <param name="context">The context.</param>
            <param name="addressing">The addressing.</param>
        </member>
        <member name="P:Apache.NMS.WCF.NmsTransportBindingElement.Destination">
            <summary>
            Gets or sets the name of the message destination.
            </summary>
            <value>The name of the message destination.</value>
        </member>
        <member name="P:Apache.NMS.WCF.NmsTransportBindingElement.DestinationType">
            <summary>
            Gets or sets the type of the message destination.
            </summary>
            <value>The type of the message destination (may be either <c>queue</c> or <c>topic</c>, and temporary 
            or permanent versions of either).</value>
        </member>
        <member name="P:Apache.NMS.WCF.NmsTransportBindingElement.Scheme">
            <summary>
            Gets the URI scheme for the transport.
            </summary>
            <value></value>
            <returns>Returns the URI scheme for the transport, which varies depending on what derived class implements this method.</returns>
        </member>
        <member name="P:Apache.NMS.WCF.NmsTransportBindingElement.XmlDoc">
            <summary>
            Gets the XML doc.
            </summary>
        </member>
        <member name="T:Apache.NMS.WCF.AsyncResult">
            <summary>
            A generic base class for IAsyncResult implementations
            that wraps a ManualResetEvent.
            </summary>
        </member>
        <member name="M:Apache.NMS.WCF.AsyncResult.#ctor(System.AsyncCallback,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Apache.NMS.WCF.AsyncResult"/> class.
            </summary>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:Apache.NMS.WCF.AsyncResult.Complete(System.Boolean)">
            <summary>
            Completes the specified completed synchronously.
            </summary>
            <param name="completedSynchronously">if set to <see langword="true"/> [completed synchronously].</param>
        </member>
        <member name="M:Apache.NMS.WCF.AsyncResult.Complete(System.Boolean,System.Exception)">
            <summary>
            Call this version of complete if you raise an exception during processing.  In addition to notifying
            the callback, it will capture the exception and store it to be thrown during AsyncResult.End.
            </summary>
            <param name="completedSynchronously">if set to <see langword="true"/> [completed synchronously].</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:Apache.NMS.WCF.AsyncResult.End``1(System.IAsyncResult)">
            <summary>
            End should be called when the End function for the asynchronous operation is complete. It
            ensures the asynchronous operation is complete, and does some common validation.
            </summary>
            <typeparam name="TAsyncResult">The type of the async result.</typeparam>
            <param name="result">The result.</param>
            <returns></returns>
        </member>
        <member name="P:Apache.NMS.WCF.AsyncResult.AsyncState">
            <summary>
            Gets a user-defined object that qualifies or contains information about an asynchronous operation.
            </summary>
            <value></value>
            <returns>
            A user-defined object that qualifies or contains information about an asynchronous operation.
            </returns>
        </member>
        <member name="P:Apache.NMS.WCF.AsyncResult.AsyncWaitHandle">
            <summary>
            Gets a <see cref="T:System.Threading.WaitHandle"/> that is used to wait for an asynchronous operation to complete.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.Threading.WaitHandle"/> that is used to wait for an asynchronous operation to complete.
            </returns>
        </member>
        <member name="P:Apache.NMS.WCF.AsyncResult.CompletedSynchronously">
            <summary>
            Gets a value that indicates whether the asynchronous operation completed synchronously.
            </summary>
            <value></value>
            <returns>true if the asynchronous operation completed synchronously; otherwise, false.
            </returns>
        </member>
        <member name="P:Apache.NMS.WCF.AsyncResult.IsCompleted">
            <summary>
            Gets a value that indicates whether the asynchronous operation has completed.
            </summary>
            <value></value>
            <returns>true if the operation is complete; otherwise, false.
            </returns>
        </member>
        <member name="P:Apache.NMS.WCF.AsyncResult.ThisLock">
            <summary>
            Gets an object lock.
            </summary>
            <value>The object lock.</value>
        </member>
        <member name="T:Apache.NMS.WCF.CompletedAsyncResult">
            <summary>
            An AsyncResult that completes as soon as it is instantiated.
            </summary>
        </member>
        <member name="M:Apache.NMS.WCF.CompletedAsyncResult.#ctor(System.AsyncCallback,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Apache.NMS.WCF.CompletedAsyncResult"/> class.
            </summary>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:Apache.NMS.WCF.CompletedAsyncResult.End(System.IAsyncResult)">
            <summary>
            Ends the specified result.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Apache.NMS.WCF.TypedAsyncResult`1.#ctor(System.AsyncCallback,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Apache.NMS.WCF.TypedAsyncResult`1"/> class.
            </summary>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:Apache.NMS.WCF.TypedAsyncResult`1.Complete(`0,System.Boolean)">
            <summary>
            Completes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="completedSynchronously">if set to <see langword="true"/> [completed synchronously].</param>
        </member>
        <member name="M:Apache.NMS.WCF.TypedAsyncResult`1.End(System.IAsyncResult)">
            <summary>
            Ends the specified result.
            </summary>
            <param name="result">The result.</param>
            <returns></returns>
        </member>
        <member name="P:Apache.NMS.WCF.TypedAsyncResult`1.Data">
            <summary>
            Gets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="M:Apache.NMS.WCF.TypedCompletedAsyncResult`1.#ctor(`0,System.AsyncCallback,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Apache.NMS.WCF.TypedCompletedAsyncResult`1"/> class.
            </summary>
            <param name="data">The data.</param>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:Apache.NMS.WCF.TypedCompletedAsyncResult`1.End(System.IAsyncResult)">
            <summary>
            Finishes the async request.
            </summary>
            <param name="result">The result.</param>
            <returns></returns>
        </member>
        <member name="T:Apache.NMS.WCF.NmsConfigurationStrings">
            <summary>
            Constants used for WCF configuration of the NMS provider.
            </summary>
        </member>
        <member name="F:Apache.NMS.WCF.NmsConfigurationStrings.Destination">
            <summary>
            The XML configuration attribute name of the <c>Destination</c> property.
            </summary>
        </member>
        <member name="F:Apache.NMS.WCF.NmsConfigurationStrings.DestinationType">
            <summary>
            The XML configuration attribute name of the <c>DestinationType</c> property.
            </summary>
        </member>
        <member name="T:Apache.NMS.WCF.AddressingVersions">
            <summary>
            Constants used for addressing namespaces.
            </summary>
        </member>
        <member name="F:Apache.NMS.WCF.AddressingVersions.WSAddressing10NameSpace">
            <summary>
            WS Addressing 1.0.
            </summary>
        </member>
        <member name="F:Apache.NMS.WCF.AddressingVersions.WSAddressingAugust2004NameSpace">
            <summary>
            WS Addressing (August 2004).
            </summary>
        </member>
        <member name="T:Apache.NMS.WCF.NmsInputSessionChannelListener">
            <summary>
            Server-side listener for sessioned input channels.
            </summary>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputSessionChannelListener.#ctor(Apache.NMS.WCF.NmsTransportBindingElement,System.ServiceModel.Channels.BindingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Apache.NMS.WCF.NmsInputSessionChannelListener"/> class.
            </summary>
            <param name="transportElement">The binding element.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputSessionChannelListener.OnAbort">
            <summary>
            Inserts processing on a communication object after it transitions to the closing state 
            due to the invocation of a synchronous abort operation.
            </summary>
            <remarks>
            Abort can be called at any time, so we can't assume that we've been Opened successfully 
            (and thus may not have any listen sockets).
            </remarks>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputSessionChannelListener.OnClose(System.TimeSpan)">
            <summary>
            Inserts processing on a communication object after it transitions to the closing state due to the invocation of a synchronous close operation.
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the on close operation has to complete before timing out.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="timeout" /> is less than zero.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputSessionChannelListener.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Inserts processing after a communication object transitions to the closing state due to the invocation of an asynchronous close operation.
            </summary>
            <returns>
            The <see cref="T:System.IAsyncResult" /> that references the asynchronous on close operation. 
            </returns>
            <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the on close operation has to complete before timing out.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous on close operation.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on close operation.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="timeout" /> is less than zero.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputSessionChannelListener.OnEndClose(System.IAsyncResult)">
            <summary>
            Completes an asynchronous operation on the close of a communication object.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" /> method.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputSessionChannelListener.OnOpen(System.TimeSpan)">
            <summary>
            Inserts processing on a communication object after it transitions into the opening state which must complete within a specified interval of time.
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the on open operation has to complete before timing out.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="timeout" /> is less than zero.</exception>
            <exception cref="T:System.TimeoutException">The interval of time specified by <paramref name="timeout" /> that was allotted for the operation was exceeded before the operation was completed.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputSessionChannelListener.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Inserts processing on a communication object after it transitions to the opening state due to the invocation of an asynchronous open operation.
            </summary>
            <returns>
            The <see cref="T:System.IAsyncResult" /> that references the asynchronous on open operation. 
            </returns>
            <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the on open operation has to complete before timing out.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous on open operation.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on open operation.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="timeout" /> is less than zero.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputSessionChannelListener.OnEndOpen(System.IAsyncResult)">
            <summary>
            Completes an asynchronous operation on the open of a communication object.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" /> method.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputSessionChannelListener.OnWaitForChannel(System.TimeSpan)">
            <summary>
            When overridden in a derived class, provides a point of extensibility when waiting for a channel to arrive.
            </summary>
            <returns>
            true if the method completed before the interval of time specified by the <paramref name="timeout" /> expired; otherwise false.
            </returns>
            <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the on wait for a channel operation has to complete before timing out.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputSessionChannelListener.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            When implemented in a derived class, provides a point of extensibility when starting to wait for a channel to arrive.
            </summary>
            <returns>
            The <see cref="T:System.IAsyncResult" /> that references the asynchronous on begin wait operation. 
            </returns>
            <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the on begin wait operation has to complete before timing out.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation on begin wait completion.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on begin wait operation.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputSessionChannelListener.OnEndWaitForChannel(System.IAsyncResult)">
            <summary>
            When implemented in a derived class, provides a point of extensibility when ending the waiting for a channel to arrive.
            </summary>
            <returns>
            true if the method completed before the timeout expired; otherwise false.
            </returns>
            <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputSessionChannelListener.OnAcceptChannel(System.TimeSpan)">
            <summary>
            When implemented in a derived class, provides an extensibility point when accepting a channel.
            </summary>
            <returns>
            The <see cref="T:System.ServiceModel.Channels.IChannel" /> accepted.
            </returns>
            <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the accept channel operation has to complete before timing out.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputSessionChannelListener.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            When implemented in a derived class, provides an asynchronous extensibility point when beginning to accept a channel.
            </summary>
            <returns>
            The <see cref="T:System.IAsyncResult" /> that references the asynchronous accept channel operation. 
            </returns>
            <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the accept channel operation has to complete before timing out.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the accept channel operation.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous accept channel operation.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputSessionChannelListener.OnEndAcceptChannel(System.IAsyncResult)">
            <summary>
            When implemented in a derived class, provides an asynchronous extensibility point when completing the acceptance a channel.
            </summary>
            <returns>
            The <see cref="T:System.ServiceModel.Channels.IChannel" /> accepted by the listener.
            </returns>
            <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.ChannelListenerBase`1.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputSessionChannelListener.DispatchCallback(System.Object)">
            <summary>
            Dispatches the callback.
            </summary>
            <param name="state">The state.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputSessionChannelListener.Dispatch(System.ServiceModel.Channels.Message)">
            <summary>
            Matches an incoming message to its waiting listener,
            using the FilterTable to dispatch the message to the correct
            listener. If no listener is waiting for the message, it is silently
            discarded.
            </summary>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputSessionChannelListener.CreateOrRetrieveChannel(Apache.NMS.WCF.NmsInputSessionChannel@)">
            <summary>
            Creates or retrieves the channel.
            </summary>
            <param name="newChannel">The channel.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputSessionChannelListener.OnChannelClosed(System.Object,System.EventArgs)">
            <summary>
            Called when the channel is closed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputSessionChannelListener.CreateNmsChannel(System.Uri)">
            <summary>
            Creates the <see cref="T:Apache.NMS.WCF.NmsInputChannel"/> that will wait for inbound messages.
            </summary>
            <param name="uri">The URI for the message queue.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputSessionChannelListener.OpenConnection(System.Uri)">
            <summary>
            Opens the connection to the message broker.
            </summary>
            <param name="uri">The URI.</param>
            <returns>An active connection to the ActiveMQ message broker specified by the URI;
            exceptions will be caught by the attached ExceptionListener.</returns>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputSessionChannelListener.OpenSession(Apache.NMS.IConnection)">
            <summary>
            Opens a session to communicate with a message queue.
            </summary>
            <param name="connection">The connection to the ActiveMQ message broker.</param>
            <returns>A session.</returns>
            <exception cref="T:System.InvalidOperationException">the <paramref name="connection"/> has not yet
            been started.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputSessionChannelListener.CreateConsumer(Apache.NMS.ISession,Apache.NMS.IDestination)">
            <summary>
            Creates the consumer of messages received on the <paramref name="session"/>.
            </summary>
            <param name="session">The session.</param>
            <param name="destination">The destination.</param>
            <returns>A consumer for any messages received during the session;
            messages will be consumed by the attached Listener.</returns>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputSessionChannelListener.OnReceiveMessage(Apache.NMS.IMessage)">
            <summary>
            Event handler that processes a received message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputSessionChannelListener.OnExceptionThrown(System.Exception)">
            <summary>
            Called when an exception is thrown by the ActiveMQ listener.
            </summary>
            <remarks>
            <see cref="T:Apache.NMS.NMSException"/>s will be caught and logged; all other exceptions will
            be thrown back up to the WCF service.
            </remarks>
            <param name="exception">The exception that was thrown.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsInputSessionChannelListener.EnsureChannelAvailable">
            <summary>
            Guarantees that a channel is attached to this listener.
            </summary>
        </member>
        <member name="P:Apache.NMS.WCF.NmsInputSessionChannelListener.MessageEncoderFactory">
            <summary>
            Gets the message encoder factory.
            </summary>
            <value>The message encoder factory.</value>
        </member>
        <member name="P:Apache.NMS.WCF.NmsInputSessionChannelListener.Destination">
            <summary>
            Gets or sets the destination.
            </summary>
            <value>The destination.</value>
        </member>
        <member name="P:Apache.NMS.WCF.NmsInputSessionChannelListener.DestinationType">
            <summary>
            Gets or sets the type of the destination.
            </summary>
            <value>The type of the destination.</value>
        </member>
        <member name="P:Apache.NMS.WCF.NmsInputSessionChannelListener.Uri">
            <summary>
            When implemented in derived class, gets the URI on which the channel listener listens for an incoming channel.
            </summary>
            <returns>
            The <see cref="T:System.Uri" /> on which the channel listener listens for incoming channels.
            </returns>
        </member>
        <member name="M:Apache.NMS.WCF.NmsAsyncResult.#ctor(Apache.NMS.WCF.NmsOutputChannel,System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Apache.NMS.WCF.NmsAsyncResult"/> class.
            </summary>
            <param name="channel">The channel.</param>
            <param name="message">The message.</param>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
        </member>
        <member name="T:Apache.NMS.WCF.InputQueue`1">
            <summary>
            Handles asynchronous interactions between producers and consumers. 
            Producers can dispatch available data to the input queue, 
            where it will be dispatched to a waiting consumer or stored until a
            consumer becomes available. Consumers can synchronously or asynchronously
            request data from the queue, which will be returned when data becomes
            available.
            </summary>
            <typeparam name="T">The concrete type of the consumer objects that are waiting for data.</typeparam>
        </member>
        <member name="T:Apache.NMS.WCF.NmsConfigurationDefaults">
            <summary>
            Constants used as default configuration settings.
            </summary>
        </member>
        <member name="F:Apache.NMS.WCF.NmsConfigurationDefaults.Destination">
            <summary>
            The default message destination type.
            </summary>
        </member>
        <member name="T:Apache.NMS.WCF.ConnectionFactoryManager">
            <summary>
            Manages connections to the ActiveMQ messaging service.
            </summary>
        </member>
        <member name="M:Apache.NMS.WCF.ConnectionFactoryManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Apache.NMS.WCF.ConnectionFactoryManager"/> class.
            </summary>
        </member>
        <member name="M:Apache.NMS.WCF.ConnectionFactoryManager.GetInstance">
            <summary>
            Gets the instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Apache.NMS.WCF.ConnectionFactoryManager.CreateConnection(System.Uri)">
            <summary>
            Creates the connection.
            </summary>
            <param name="connection">The connection.</param>
            <returns></returns>
        </member>
        <member name="T:Apache.NMS.WCF.NmsBindingCollection">
            <summary>
            A collection of <see cref="T:Apache.NMS.WCF.NmsBindingElement"/> objects.
            </summary>
        </member>
        <member name="T:Apache.NMS.WCF.NmsChannelFactory`1">
            <summary>
            Factory for message channels.
            </summary>
        </member>
        <member name="M:Apache.NMS.WCF.NmsChannelFactory`1.#ctor(Apache.NMS.WCF.NmsTransportBindingElement,System.ServiceModel.Channels.BindingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Apache.NMS.WCF.NmsChannelFactory`1"/> class.
            </summary>
            <param name="bindingElement">The binding element.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsChannelFactory`1.OnOpen(System.TimeSpan)">
            <summary>
            Inserts processing on a communication object after it transitions into the opening state which must complete within a specified interval of time.
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the on open operation has to complete before timing out.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="timeout" /> is less than zero.</exception>
            <exception cref="T:System.TimeoutException">The interval of time specified by <paramref name="timeout" /> that was allotted for the operation was exceeded before the operation was completed.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsChannelFactory`1.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Inserts processing on a communication object after it transitions to the opening state due to the invocation of an asynchronous open operation.
            </summary>
            <returns>
            The <see cref="T:System.IAsyncResult" /> that references the asynchronous on open operation. 
            </returns>
            <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the on open operation has to complete before timing out.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous on open operation.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on open operation.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="timeout" /> is less than zero.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsChannelFactory`1.OnEndOpen(System.IAsyncResult)">
            <summary>
            Completes an asynchronous operation on the open of a communication object.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" /> method.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsChannelFactory`1.OnCreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
            <summary>
            When implemented in a derived class, provides an extensibility point when creating channels.
            </summary>
            <returns>
            An NMS channel with the specified addresses.
            </returns>
            <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> of the remote endpoint to which the channel sends messages.</param>
            <param name="via">The <see cref="T:System.Uri" /> that contains the transport address to which messages are sent on the output channel.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsChannelFactory`1.OnClosed">
            <summary>
            Invoked during the transition of a communication object into the closing state.
            </summary>
        </member>
        <member name="P:Apache.NMS.WCF.NmsChannelFactory`1.BufferManager">
            <summary>
            Gets the buffer manager.
            </summary>
        </member>
        <member name="P:Apache.NMS.WCF.NmsChannelFactory`1.MessageEncoderFactory">
            <summary>
            Gets the message encoder factory.
            </summary>
        </member>
        <member name="P:Apache.NMS.WCF.NmsChannelFactory`1.Destination">
            <summary>
            Gets the destination.
            </summary>
            <value>The destination.</value>
        </member>
        <member name="P:Apache.NMS.WCF.NmsChannelFactory`1.DestinationType">
            <summary>
            Gets the type of the destination.
            </summary>
            <value>The type of the destination.</value>
        </member>
        <member name="T:Apache.NMS.WCF.NmsBindingElement">
            <summary>
            Configuration element for the <see cref="T:Apache.NMS.WCF.NmsBinding"/>, allowing the overriding of default values.
            </summary>
        </member>
        <member name="M:Apache.NMS.WCF.NmsBindingElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Apache.NMS.WCF.NmsBindingElement"/> class.
            </summary>
        </member>
        <member name="M:Apache.NMS.WCF.NmsBindingElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Apache.NMS.WCF.NmsBindingElement"/> class.
            </summary>
            <param name="configurationName">Name of the configuration.</param>
        </member>
        <member name="M:Apache.NMS.WCF.NmsBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
            <summary>
            Initializes this binding configuration element with the content of the specified binding.
            </summary>
            <param name="binding">A binding.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="binding"/> is null.</exception>
            <exception cref="T:System.ArgumentException">The type of this binding element is different from the type specified by <paramref name="binding"/>.</exception>
        </member>
        <member name="M:Apache.NMS.WCF.NmsBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
            <summary>
            Called when the content of a specified binding element is applied to this binding configuration element.
            </summary>
            <param name="binding">A binding.</param>
        </member>
        <member name="P:Apache.NMS.WCF.NmsBindingElement.Destination">
            <summary>
            Gets or sets the name of the message destination.
            </summary>
            <value>The name of the message destination.</value>
        </member>
        <member name="P:Apache.NMS.WCF.NmsBindingElement.DestinationType">
            <summary>
            Gets or sets the type of the message destination.
            </summary>
            <value>The type of the message destination (may be either <c>queue</c> or <c>topic</c>, and temporary 
            or permanent versions of either).</value>
        </member>
        <member name="P:Apache.NMS.WCF.NmsBindingElement.Properties">
            <summary>
            Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection"/> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty"/> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement"/> objects of this configuration element.
            </summary>
            <value></value>
            <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection"/> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty"/> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement"/> objects of this configuration element.</returns>
        </member>
        <member name="P:Apache.NMS.WCF.NmsBindingElement.BindingElementType">
            <summary>
            When overridden in a derived class, gets the <see cref="T:System.Type" /> object that represents the custom binding element. 
            </summary>
            <returns>
            A <see cref="T:System.Type" /> object that represents the custom binding type.
            </returns>
        </member>
    </members>
</doc>
